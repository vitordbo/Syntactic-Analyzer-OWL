
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ALL AND CARDINALITY CLASS COLON COMMA DATA_TYPE DISJOINTCLASSES EQ EQUIVALENTTO EXACTLY GT HAS ID INDIVIDUALS IS LBRACE LBRACKET LPAREN LT MAX MIN NOT OF ONLY OR PROPERTY RBRACE RBRACKET RESERVED RPAREN SOME SUBCLASSOF THAT VALUE\n    ontologia : descricao_classes descricao_individuals\n    \n    descricao_classes : CLASS COMMA ID equivalencia_classes descricao_classes\n                      | CLASS COMMA ID subclasso_classes descricao_classes\n                      | CLASS COMMA ID disjoint_classes descricao_classes\n                      | \n    \n    equivalencia_classes : EQUIVALENTTO COMMA expressao_classes COMMA\n                         | EQUIVALENTTO COMMA expressao_classes\n    \n    subclasso_classes : SUBCLASSOF COMMA expressao_classes propriedades COMMA\n                      | SUBCLASSOF COMMA expressao_classes propriedades\n                      | SUBCLASSOF COMMA expressao_classes COMMA\n                      | SUBCLASSOF COMMA expressao_classes\n    \n    disjoint_classes : DISJOINTCLASSES COMMA LPAREN ID COMMA ID COMMA ID RPAREN COMMA\n                     | DISJOINTCLASSES COMMA LPAREN ID COMMA ID COMMA ID RPAREN\n    \n    propriedades : PROPERTY expressao_classes COMMA\n                 | PROPERTY expressao_classes\n    \n    expressao_classes : ID\n                      | ID AND LPAREN expressao_classes COMMA expressao_classes RPAREN\n                      | ID AND LPAREN expressao_classes COMMA ID SOME ID RPAREN\n                      | ID AND LPAREN ID SOME ID RPAREN\n                      | ID AND LPAREN ID COMMA ID SOME ID RPAREN\n    \n    descricao_individuals : CLASS COMMA ID ID descricao_individuals\n                          | CLASS COMMA ID descricao_individuals\n                          | \n    '
    
_lr_action_items = {'CLASS':([0,2,9,10,11,12,16,18,19,20,25,26,27,29,31,32,36,37,41,52,55,56,59,60,61,],[3,5,5,3,3,3,5,-2,-3,-4,-7,-16,-11,-6,-10,-9,-8,-15,-14,-19,-17,-13,-12,-20,-18,]),'$end':([0,1,2,4,9,10,11,12,16,17,18,19,20,24,25,26,27,29,31,32,36,37,41,52,55,56,59,60,61,],[-5,0,-23,-1,-23,-5,-5,-5,-23,-22,-2,-3,-4,-21,-7,-16,-11,-6,-10,-9,-8,-15,-14,-19,-17,-13,-12,-20,-18,]),'COMMA':([3,5,13,14,15,25,26,27,32,34,37,39,40,41,42,52,55,56,60,61,],[6,7,21,22,23,29,-16,31,36,38,41,44,45,-14,46,-19,-17,59,-20,-18,]),'ID':([6,7,9,21,22,28,33,35,38,43,44,45,46,53,54,],[8,9,16,26,26,34,26,39,42,47,48,49,51,57,58,]),'EQUIVALENTTO':([8,],[13,]),'SUBCLASSOF':([8,],[14,]),'DISJOINTCLASSES':([8,],[15,]),'LPAREN':([23,30,],[28,35,]),'PROPERTY':([26,27,52,55,60,61,],[-16,33,-19,-17,-20,-18,]),'AND':([26,39,49,],[30,30,30,]),'SOME':([39,48,49,],[43,53,54,]),'RPAREN':([47,49,50,51,52,55,57,58,60,61,],[52,-16,55,56,-19,-17,60,61,-20,-18,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'ontologia':([0,],[1,]),'descricao_classes':([0,10,11,12,],[2,18,19,20,]),'descricao_individuals':([2,9,16,],[4,17,24,]),'equivalencia_classes':([8,],[10,]),'subclasso_classes':([8,],[11,]),'disjoint_classes':([8,],[12,]),'expressao_classes':([21,22,33,35,45,],[25,27,37,40,50,]),'propriedades':([27,],[32,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> ontologia","S'",1,None,None,None),
  ('ontologia -> descricao_classes descricao_individuals','ontologia',2,'p_ontologia','App.py',219),
  ('descricao_classes -> CLASS COMMA ID equivalencia_classes descricao_classes','descricao_classes',5,'p_descricao_classes','App.py',224),
  ('descricao_classes -> CLASS COMMA ID subclasso_classes descricao_classes','descricao_classes',5,'p_descricao_classes','App.py',225),
  ('descricao_classes -> CLASS COMMA ID disjoint_classes descricao_classes','descricao_classes',5,'p_descricao_classes','App.py',226),
  ('descricao_classes -> <empty>','descricao_classes',0,'p_descricao_classes','App.py',227),
  ('equivalencia_classes -> EQUIVALENTTO COMMA expressao_classes COMMA','equivalencia_classes',4,'p_equivalencia_classes','App.py',234),
  ('equivalencia_classes -> EQUIVALENTTO COMMA expressao_classes','equivalencia_classes',3,'p_equivalencia_classes','App.py',235),
  ('subclasso_classes -> SUBCLASSOF COMMA expressao_classes propriedades COMMA','subclasso_classes',5,'p_subclasso_classes','App.py',242),
  ('subclasso_classes -> SUBCLASSOF COMMA expressao_classes propriedades','subclasso_classes',4,'p_subclasso_classes','App.py',243),
  ('subclasso_classes -> SUBCLASSOF COMMA expressao_classes COMMA','subclasso_classes',4,'p_subclasso_classes','App.py',244),
  ('subclasso_classes -> SUBCLASSOF COMMA expressao_classes','subclasso_classes',3,'p_subclasso_classes','App.py',245),
  ('disjoint_classes -> DISJOINTCLASSES COMMA LPAREN ID COMMA ID COMMA ID RPAREN COMMA','disjoint_classes',10,'p_disjoint_classes','App.py',252),
  ('disjoint_classes -> DISJOINTCLASSES COMMA LPAREN ID COMMA ID COMMA ID RPAREN','disjoint_classes',9,'p_disjoint_classes','App.py',253),
  ('propriedades -> PROPERTY expressao_classes COMMA','propriedades',3,'p_propriedades','App.py',260),
  ('propriedades -> PROPERTY expressao_classes','propriedades',2,'p_propriedades','App.py',261),
  ('expressao_classes -> ID','expressao_classes',1,'p_expressao_classes','App.py',268),
  ('expressao_classes -> ID AND LPAREN expressao_classes COMMA expressao_classes RPAREN','expressao_classes',7,'p_expressao_classes','App.py',269),
  ('expressao_classes -> ID AND LPAREN expressao_classes COMMA ID SOME ID RPAREN','expressao_classes',9,'p_expressao_classes','App.py',270),
  ('expressao_classes -> ID AND LPAREN ID SOME ID RPAREN','expressao_classes',7,'p_expressao_classes','App.py',271),
  ('expressao_classes -> ID AND LPAREN ID COMMA ID SOME ID RPAREN','expressao_classes',9,'p_expressao_classes','App.py',272),
  ('descricao_individuals -> CLASS COMMA ID ID descricao_individuals','descricao_individuals',5,'p_descricao_individuals','App.py',277),
  ('descricao_individuals -> CLASS COMMA ID descricao_individuals','descricao_individuals',4,'p_descricao_individuals','App.py',278),
  ('descricao_individuals -> <empty>','descricao_individuals',0,'p_descricao_individuals','App.py',279),
]
